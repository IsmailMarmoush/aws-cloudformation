AWSTemplateFormatVersion: 2010-09-09
Description: Initial pipeline 

Parameters:
  environment:
    Description: Development Envrionment Name
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - stage
    - qa
    - prod
    
  uniqueIdentifier:
    Description: A unique identifier to associate who this bucket is for
    Type: String
    Default: uniqueId
    
  allowSubnet:
    Description: Subnet to limit access to
    Type: String
    Default: 10.0.1.0
    
  bucketIdentifier:
    Description: Type of bucket to create
    Type: String
    Default: test2
    AllowedValues:
    - test2
    - root
    - pipeline-artifact-store
    

# TAGS
  costCenter:
    Type: String
    Default: 'not defined'
    
  assignmentGroup:
    Type: String
    Default: 'not defined'
    
  applicationGroup:
    Type: String
    Default: 'not defined'
    
  applicaton:
    Type: String
    Default: 'S3 Object Storage'
    
  dataClass:
    Type: String
    Default: 'not defined'
    AllowedValues:
    - InternalUseOnly
    - Public
    - 'not defined'
    
  regulatory:
    Type: String
    Default: 'not defined'
    AllowedValues:
    - none
    - HIPPA
    - GxP
    - SOX
    - PCI
    - PII
    - 'not defined'

  technicalContactEmail:
    Type: String
    Default: 'not defined'
    
    
  whoBuilt:
    Type: String
    Default: 'not defined'
    
  solutionVP:
    Type: String
    Default: 'not defined'
    
  solutionDirector:
    Type: String
    Default: 'not defined'

  solutionManager:
    Type: String
    Default: 'not defined'
    
  createdFor:
    Type: String
    Default: 'not defined'      

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "S3 Bucket Identifer"
      Parameters:
      - environment
      - uniqueIdentifier
      - bucketIdentifier
      - repositoryDescription
    - Label:
        default: "Tags"
      Parameters:
        - costCenter
        - assignmentGroup
        - applicationGroup
        - applicaton
        - dataClass
        - regulatory
        - technicalContactEmail
        - whoBuilt
        - solutionVP
        - solutionDirector
        - solutionManager
        - createdFor
    ParameterLabels:
      environment:
        default: 'Environment where this bucket is being used'
      uniqueIdentifier:
        default: 'Unique identifier for s3 bucket'
      bucketIdentifier:
        default: 'Identifier for this bucket. Will be appended to uniqueIdentifier to form bucket name.'
      costCenter: 
        default: 'CostCenter to tag this bucket with'
      assignmentGroup:
        default: 'Assignment Group to associate with bucket.'
      applicationGroup:
        default: 'Application Group to associate with bucket.'
      application:
        default: 'Description of application'
      dataClass:
        default: 'Type of data stored in this bucket.'
      regulatory:
        default: 'Classification if Regulatory data is stored.'
      technicalContactEmail:
        default: 'Email address of person/group to contact for information regarding this bucket.'
      whoBuilt:
        default: 'Who built this bucket.'
      solutionVP:
        default: 'VP of group who owns this bucket.'
      solutionDirector:
        default: 'Director of group who owns this bucket.'
      solutionManager:
        default: 'Manager of group who owns this bucket.'
      createdFor:
        default: 'Person/group this bucket was created for.'        
      

Resources:

  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [!Ref uniqueIdentifier, !Ref bucketIdentifier, !Ref 'AWS::Region' ]]
      Tags:
      - {Key: CostCenter, Value: !Ref uniqueIdentifier}
      - {Key: TechnicalContactEmail, Value: !Ref technicalContactEmail}
      
      
  s3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref s3Bucket
      PolicyDocument:
        Id: !Join [ "-", [ !Ref uniqueIdentifier, "s3-policy"]]
        Version: "2012-10-17"
        Statement:
 #       We will uncomment this when we want to block to a specific subnet
 #       - Sid: "Allow access only from this subnet"
 #         Effect: "Allow"
 #         Principal: "*"
 #         Action: "s3:*"
 #         Resource:
 #         - !Sub arn:aws:s3:::${s3Bucket/*
 #         Condition:
 #         - {IpAddress: {"aws:SourceIp":"10.0.0.0/8"
        - Sid: "Deny Insecure Connections"
          Effect: "Deny"
          Principal: "*"
          Action: "s3:*"
          Resource:
          - !Sub arn:aws:s3:::${s3Bucket}/*
          Condition: {Bool: {"aws:SecureTransport": "false"}}
        - Sid: "Deny unencrypted upload (require --sse)"
          Effect: "Deny"
          Principal: "*"
          Action: "s3:PutObject"
          Resource:
          - !Sub arn:aws:s3:::${s3Bucket}/*
          Condition: {StringNotEquals: {"s3:x-amz-server-side-encryption":"AWS256"}}
          
          
          
